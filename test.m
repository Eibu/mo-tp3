config = configuration(100, 100, 0.1, ...
    @(conf, pop) mockSelect(conf, pop), ...
    @(conf, pop) mockCrossover(conf, pop), ...
    @(conf, pop) mockMutation(conf, pop), ...
    @(conf, pop) mockEvaluation(conf, pop), ...
    @(conf, p, c) mockReplacement(conf, p, c), ...
    generate_distance_matrix(generate_problem(3)) ...
);

ga = genetic_algorithm(config);
ga.run();

function pop = mockSelect(~, pop); end
function pop = mockCrossover(~, pop); end
function pop = mockMutation(~, pop); end
function pop = mockEvaluation(~, pop); end
function pop = mockReplacement(~, p, c); pop = [p, c]; end